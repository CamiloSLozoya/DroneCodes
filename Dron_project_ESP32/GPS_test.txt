#include <Wire.h>
#include <string.h>
#include <SoftwareSerial.h> 
#include "TinyGPS++.h";
#include "HardwareSerial.h";
#define MAX_DATA_SIZE         80
#define MAX_MESSAGE_SIZE      100
#define COMM_DELAY_SECONDS    1
#define LED_PIN               2 //GPS valid indicator
//GPS
TinyGPSPlus gps;
#define swsTX 34 // Transmit FROM GPS
#define swsRX 35// Receive TO GPS
#define GPSBaud 9600 
SoftwareSerial GPSserial(swsRX, swsTX);//LORA 16, 17
//Real time variables
unsigned long previousMillis;
unsigned long timeInterval;


void setup() {
  //Puerto serial
  Serial.begin(115200);
  //GPS
  GPSserial.begin(9600);
  delay(200);
  //LED
  pinMode(LED_PIN, OUTPUT);

  //Real tiem variable
  timeInterval = COMM_DELAY_SECONDS*1000;
}

void loop() {
  unsigned long currentMillis = millis();

  // If TimeInterval is over, then send data to the station
  if(currentMillis - previousMillis > timeInterval) {
      // Update timeinterval
      previousMillis = currentMillis;
      while (GPSserial.available() > 0) {
        gps.encode(GPSserial.read());
        }
      // Check if GPS reading is valid
      checkGPSconnection();
      // Print coordenates of the GPS
      char data_out[MAX_DATA_SIZE];
      sprintf(data_out,"LAT,%11.8f,LONG,%13.8f,ALT,%6.1f;",gps.location.lat(),gps.location.lng(),gps.altitude.meters());
      Serial.println(data_out); 
  }
}

// --------------------------------------------------
// Check GPS connection
// --------------------------------------------------
int checkGPSconnection()
{
  static int toggle_led=0;
  // Blink led if gps location is not valid, otherwise led is on
  if (!gps.location.isValid() ){
     if (toggle_led==0){
        digitalWrite(LED_PIN,HIGH);
        toggle_led=1;
      } else{
         digitalWrite(LED_PIN,LOW);
         toggle_led=0;
      }
      return 0;
  } else {
      digitalWrite(LED_PIN,HIGH);
      toggle_led=1;
      return 1;
  }
}
